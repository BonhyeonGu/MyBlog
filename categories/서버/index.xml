<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>서버 on 9Bon's_Docs</title><link>https://docs.9bon.org/categories/%EC%84%9C%EB%B2%84/</link><description>Recent content in 서버 on 9Bon's_Docs</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Mon, 15 May 2023 17:22:49 +0900</lastBuildDate><atom:link href="https://docs.9bon.org/categories/%EC%84%9C%EB%B2%84/index.xml" rel="self" type="application/rss+xml"/><item><title>Gateway에 OpenVPN 설치</title><link>https://docs.9bon.org/p/gateway%EC%97%90-openvpn-%EC%84%A4%EC%B9%98/</link><pubDate>Mon, 15 May 2023 17:22:49 +0900</pubDate><guid>https://docs.9bon.org/p/gateway%EC%97%90-openvpn-%EC%84%A4%EC%B9%98/</guid><description>&lt;img src="https://docs.9bon.org/p/gateway%EC%97%90-openvpn-%EC%84%A4%EC%B9%98/thum.png" alt="Featured image of post Gateway에 OpenVPN 설치" />&lt;h2 id="서론">서론&lt;/h2>
&lt;h3 id="개요">개요&lt;/h3>
&lt;p>라우팅, 방화벽, NAT 등의 조건이 걸린 Gateway를 경우에 따라서 다른 망의 호스트로 부터 접근하고 싶은 경우가 있습니다.&lt;br>
클라이언트가 속한 망이 본인 권한이 아닐 경우 VPN을 Gateway에 설치하는 것이 이상적인 솔루션입니다.&lt;/p>
&lt;p>물론 이것이 클라이언트가 속한 망의 정책에 위반되지 않는지 검토되어야 하며,&lt;br>
라우팅은 네트워크 계층을, VPN은 네트워크와 전송 계층의 사이에 존재하는 서비스이기 때문에,&lt;br>
정작 실제 망에 문제가 생기면 VPN 설정과 무관하게 됨을 이해해야 합니다.&lt;/p>
&lt;h3 id="vpn의-udp-tcp">VPN의 UDP? TCP?&lt;/h3>
&lt;p>VPN도 네트워크 서비스인 만큼, 두 네트워크 프로토콜중에 하나를 골라야 합니다.&lt;br>
하지만 궁금증이 생길 수 있습니다. 만약 UDP로 VPN을 연결하면 TCP서비스를 사용하지 못하는가?&lt;br>
답은 &amp;lsquo;그렇지 않다.&amp;rsquo; 입니다. VPN에서 선택하는 프로토콜은 VPN 터널에서 사용할 패킷을 어떻게 전달하느냐 입니다.&lt;br>
이 위에 올라갈 서비스와는 다른 것입니다.&lt;/p>
&lt;p>하지만 이것은 신중히 선택되어야 합니다. 만약 VPN을 UDP로 설정한다면, 서비스가 TCP를 사용한들&lt;br>
TCP 본연의 신뢰성을 잃거나, 서비스의 handshake를 VPN의 UDP가 손실시켜 본래의 속도보다 더 느릴 수 있습니다.&lt;/p>
&lt;p>이번 예에서는 VPN을 UDP로 설정합니다. 해당 경우로 얻길 원하는 이점은 VPN으로 소요되는 시간을 최소화 하는 것입니다.&lt;/p>
&lt;h2 id="설치">설치&lt;/h2>
&lt;p>설명되는 과정은 Ubunut 22.04 LTS 기준입니다. 기본 게이트웨이의 설정&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">net.ipv4.ip_forward&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>과 같은 것은 마무리 되었다고 가정합니다.&lt;/p>
&lt;h3 id="인증서">인증서&lt;/h3>
&lt;p>인증서를 만들어줄 패키지를 설치하고, 인증서 설정이 포함된 디렉토리를 생성,&lt;br>
그 후 인증서 메타데이터를 수정합니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">sudo apt-get update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install easy-rsa openvpn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make-cadir ~/openvpn-ca
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ~/openvpn-ca
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nano vars
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>vars의 내용물은 대부분 주석으로 처리되어 있는 내용일 경우 필자와 동일한 Easy-RAS 3.x 환경입니다.
만약 export 등의 키워드가 붙어있다면 2.x 임으로 다른 문서를 확인해주세요&lt;br>
저는 다음과 같이 정의하겠습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">set_var EASYRSA_REQ_COUNTRY &lt;span class="s2">&amp;#34;KR&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">set_var EASYRSA_REQ_PROVINCE &lt;span class="s2">&amp;#34;Busan&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">set_var EASYRSA_REQ_CITY &lt;span class="s2">&amp;#34;Busan&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">set_var EASYRSA_REQ_ORG &lt;span class="s2">&amp;#34;Oklab&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">set_var EASYRSA_REQ_EMAIL &lt;span class="s2">&amp;#34;bonhyeon.gu@9bon.org&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">set_var EASYRSA_REQ_OU &lt;span class="s2">&amp;#34;graduate&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>이후 필요한 파일을 출력하겠습니다. 인증, 인증서, 키, 서명등의 이론적 설명은 다음에 포스팅에 하도록 하겠습니다.&lt;br>
클라이언트 이름을 h100으로 하는 예제입니다.&lt;/p>
&lt;p>공개키 인프라 초기화&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">./easyrsa init-pki
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>CA인증서 및 키 생성&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">./easyrsa build-ca nopass
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>서버의 인증서 요청(CSR) 및 개인 키 생성&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">./easyrsa gen-req server nopass
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>서버 CSR에 서명하여 서버 인증서 생성&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">./easyrsa sign-req server server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>클라이언트의 인증서 요청(CSR) 및 개인 키 생성&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">./easyrsa gen-req h100 nopass
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>클라이언트 CSR에 서명하여 클라이언트 인증서 생성&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">./easyrsa sign-req client h100
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>DH 파라미터 생성&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">./easyrsa gen-dh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>CRL(인증서 폐지 목록) 생성&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">./easyrsa gen-crl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>작업의 편리함을 위하여 생성된 파일을 openvpn 디렉토리에 복사하도록 하겠습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">sudo cp ./pki/ca.crt /etc/openvpn/server/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp ./pki/issued/server.crt /etc/openvpn/server/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp ./pki/private/server.key /etc/openvpn/server/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp ./pki/dh.pem /etc/openvpn/server/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp ./pki/crl.pem /etc/openvpn/server/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="openvpn-서버-설정">OpenVPN 서버 설정&lt;/h3>
&lt;p>MitM(중간자공격)을 방지하기 위해 TLS-Auth를 설정할 수 있습니다. 이를 위해서는 추가적인 키 생성이 필요합니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /etc/openvpn/server/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">openvpn --genkey --secret ta.key
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>다음으로 &lt;em>/etc/openvpn/server.conf&lt;/em> 를 생성합니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">port &lt;span class="m">1194&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">proto udp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dev tun
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ca server/ca.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cert server/server.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">key server/server.key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dh server/dh.pem
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">server 10.8.0.0 255.255.255.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ifconfig-pool-persist ipp.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">push &lt;span class="s2">&amp;#34;redirect-gateway def1 bypass-dhcp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">push &lt;span class="s2">&amp;#34;dhcp-option DNS 8.8.8.8&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">push &lt;span class="s2">&amp;#34;dhcp-option DNS 8.8.4.4&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">keepalive &lt;span class="m">10&lt;/span> &lt;span class="m">120&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tls-auth server/ta.key &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cipher AES-256-CBC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">auth SHA256
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">compress lz4-v2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">push &lt;span class="s2">&amp;#34;compress lz4-v2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">user nobody
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">group nogroup
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">persist-key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">persist-tun
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">status openvpn-status.log
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">verb &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">crl-verify server/crl.pem
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">client-config-dir /etc/openvpn/ccd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>다음으로 &lt;em>/etc/openvpn/ccd/&lt;/em> 디렉토리를 만들고 &lt;em>/etc/openvpn/ccd/h100&lt;/em> 를 생성합니다. 이 작업은&lt;br>
클라이언트의 정보를 지정하는 것입니다. h100이라는 이름도 클라이언트 인증서의 CN을 따라갑니다.&lt;br>
앞에서 &lt;em>./easyrsa gen-req h100 nopass&lt;/em> 의 명령과 관련이 있습니다.&lt;/p>
&lt;p>해당 파일에는 다음과 같은 고정 아이피 주소와 같은 내용을 넣을 수 있습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">ifconfig-push 10.8.0.2 255.255.255.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>이제 재시작 하여 설정을 적용시켜야 합니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">sudo systemctl start openvpn@server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl &lt;span class="nb">enable&lt;/span> openvpn@server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="클라이언트-설정">클라이언트 설정&lt;/h3>
&lt;p>지금부터는 클라이언트(H100)의 설정입니다. 클라이언트에도 패키지를 설치해 줍니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">sudo apt-get update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install openvpn
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>다음으로 &lt;em>/etc/openvpn/client/&lt;/em> 에 앞에서 만들었던 해당 파일을 옮겨주어야 합니다.&lt;br>
당연히 인증서와 키를 옮기는 과정은 주의가 필요합니다.&lt;/p>
&lt;ul>
&lt;li>ca.crt&lt;/li>
&lt;li>h100.crt&lt;/li>
&lt;li>h100.key&lt;/li>
&lt;li>ta.key&lt;/li>
&lt;/ul>
&lt;p>그 후 다음 설정파일을 &lt;em>/etc/openvpn/client.conf&lt;/em> 에 작성하겠습니다.&lt;br>
vpn.server.com 은 VPN 서버의 주소가 들어가야 합니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">client
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dev tun
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">proto udp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">remote vpn.server.com &lt;span class="m">1194&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">resolv-retry infinite
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nobind
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">user nobody
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">group nogroup
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">persist-key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">persist-tun
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ca /etc/openvpn/client/ca.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cert /etc/openvpn/client/h100.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">key /etc/openvpn/client/h100.key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tls-auth /etc/openvpn/client/ta.key &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cipher AES-256-CBC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">auth SHA256
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">verb &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>마지막으로 다음의 명령어로 설정 변경을 적용시킵니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">sudo systemctl restart openvpn@client
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>그 후 &lt;em>ifconfig&lt;/em> 그리고 &lt;em>ping&lt;/em> 등으로 부여된 주소 및 연결을 확인할 수 있습니다.&lt;/p>
&lt;h2 id="nat-설정-참고">NAT 설정 참고&lt;/h2>
&lt;p>만약 Gateway에서 VPN 연결 대상으로 넘겨주기 위해서는 게이트웨이에 다음과 같은 예를 사용할 수 있습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-zsh" data-lang="zsh">&lt;span class="line">&lt;span class="cl">sudo iptables -t nat -A PREROUTING -p tcp --dport &lt;span class="o">[&lt;/span>외부에서 들어올 포트번호&lt;span class="o">]&lt;/span> -j DNAT --to-destination &lt;span class="o">[&lt;/span>VPN주소&lt;span class="o">]&lt;/span>:22
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo iptables -A FORWARD -p tcp -d &lt;span class="o">[&lt;/span>VPN주소&lt;span class="o">]&lt;/span> --dport &lt;span class="o">[&lt;/span>외부에서 들어올 포트번호&lt;span class="o">]&lt;/span> -j ACCEPT
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>쿠버플로우 설치</title><link>https://docs.9bon.org/p/%EC%BF%A0%EB%B2%84%ED%94%8C%EB%A1%9C%EC%9A%B0-%EC%84%A4%EC%B9%98/</link><pubDate>Thu, 20 Oct 2022 04:46:35 +0900</pubDate><guid>https://docs.9bon.org/p/%EC%BF%A0%EB%B2%84%ED%94%8C%EB%A1%9C%EC%9A%B0-%EC%84%A4%EC%B9%98/</guid><description>&lt;img src="https://docs.9bon.org/p/%EC%BF%A0%EB%B2%84%ED%94%8C%EB%A1%9C%EC%9A%B0-%EC%84%A4%EC%B9%98/thum.png" alt="Featured image of post 쿠버플로우 설치" />&lt;h2 id="서론">서론&lt;/h2>
&lt;h3 id="개요">개요&lt;/h3>
&lt;p>쿠버플로우, 큐베플로우, 쿠브플로우.. 이것을 배포해야 하는 일이 있었습니다.&lt;br>
하지만 추가 패키지를 이용하지 않고 K8s로 직접 설치하는 자료는 적었으며 따라해도 오류가 발생했습니다.&lt;/p>
&lt;p>그도 그럴것이 쿠버플로우는 계속해서 업데이트가 되고 있으며, 운영체제, 쿠버네티스, 도커를 포함한 여러 패키지의 업데이트에도 민감하기 때문에 문제가 계속 생기는 것 같습니다.&lt;/p>
&lt;p>이번 포스트에선 쿠버플로우에 대한 설명을 따로 하진 않을 것이며,&lt;br>
Clone이 가능한 가상머신을 기준, GPU가 없는 것을 예제로 설명해 보도록 하겠습니다.&lt;br>
해당 포스트를 이해하셨다면 서버에 직접 설치하는건 문제 없을거라 예상합니다.&lt;/p>
&lt;h3 id="고려사항">고려사항&lt;/h3>
&lt;p>다음은 이유는 파악 못했으나, 문제 원인을 찾아낸 것들의 내용입니다. &lt;strong>2022-12&lt;/strong> 기준입니다.&lt;/p>
&lt;ul>
&lt;li>우분투 22.04 환경 쿠버네티스 설치에서 인증 메니저 노드가 설치 안되는 것을 확인했습니다. 20.04는 문제가 없었습니다.&lt;/li>
&lt;li>Readme에서는 쿠버플로우 1.20 이상 버전을 권장했으나 1.21.5-00 버전이 아니면 설치 문제가 발생했습니다.&lt;/li>
&lt;li>마스터, 워커노드 모두 사양을 크게 잡아먹었습니다. 각 노드 모두 16GB이상의 메모리가 아니면 문제가 생겼습니다.&lt;/li>
&lt;li>종종 kubeflow manifests의Install with a single command 방법이 종료되지 않는 문제를 겪었습니다.&lt;/li>
&lt;/ul>
&lt;h2 id="설치">설치&lt;/h2>
&lt;p>config등을 수정, 추가하는 부분은 위와 아래의 글을 참고해주세요&lt;/p>
&lt;h3 id="공통-사전-설치">공통 사전 설치&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt-get update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> ca-certificates &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> curl &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> gnupg &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> lsb-release
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -fsSL https://download.docker.com/linux/ubuntu/gpg &lt;span class="p">|&lt;/span> sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="s2">&amp;#34;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> &lt;/span>&lt;span class="k">$(&lt;/span>lsb_release -cs&lt;span class="k">)&lt;/span>&lt;span class="s2"> stable&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> sudo tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install docker-ce docker-ce-cli containerd.io
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo curl -L &lt;span class="s2">&amp;#34;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-&lt;/span>&lt;span class="k">$(&lt;/span>uname -s&lt;span class="k">)&lt;/span>&lt;span class="s2">-&lt;/span>&lt;span class="k">$(&lt;/span>uname -m&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -o /usr/local/bin/docker-compose
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo chmod +x /usr/local/bin/docker-compose
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>도커, 도커 컴포즈를 설치합니다. 버전이 문제가 없다면 다른 방식으로 설치해도 무방할 것 같습니다.&lt;/p>
&lt;p>su&amp;ndash;&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat &amp;gt; /etc/docker/daemon.json &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;exec-opts&amp;#34;: [&amp;#34;native.cgroupdriver=systemd&amp;#34;],
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;log-driver&amp;#34;: &amp;#34;json-file&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;log-opts&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;max-size&amp;#34;: &amp;#34;100m&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> },
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;storage-driver&amp;#34;: &amp;#34;overlay2&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;storage-opts&amp;#34;: [
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;overlay2.override_kernel_check=true&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> ]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>suend&amp;ndash;&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo mkdir -p /etc/systemd/system/docker.service.d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo usermod -aG docker &lt;span class="si">${&lt;/span>&lt;span class="nv">USER&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">newgrp docker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo chmod &lt;span class="m">666&lt;/span> /var/run/docker.sock
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl restart docker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl &lt;span class="nb">enable&lt;/span> docker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg &lt;span class="p">|&lt;/span> sudo apt-key add
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-add-repository &lt;span class="s2">&amp;#34;deb http://apt.kubernetes.io/ kubernetes-xenial main&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install -y &lt;span class="nv">kubelet&lt;/span>&lt;span class="o">=&lt;/span>1.21.5-00 &lt;span class="nv">kubeadm&lt;/span>&lt;span class="o">=&lt;/span>1.21.5-00 &lt;span class="nv">kubectl&lt;/span>&lt;span class="o">=&lt;/span>1.21.5-00 --allow-downgrades --allow-change-held-packages
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-mark hold kubelet kubeadm kubectl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>도커 권한 설정을 하고 쿠버네티스를 설치합니다.&lt;/p>
&lt;p>su&amp;ndash;&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat &lt;span class="s">&amp;lt;&amp;lt;EOF &amp;gt; /etc/sysctl.d/k8s.conf
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.bridge.bridge-nf-call-ip6tables = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">net.bridge.bridge-nf-call-iptables = 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>suend&amp;ndash;&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo sysctl --system
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl restart kubelet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>이 이후로는 해당 가상 머신을 Clone 1회 또는 2회하여 마스터 노드와 워커노드로 나눕니다.&lt;br>
호스트 네임과 아이피 주소에 주의하세요, 호스트 네임같은 동일할 경우 문제가 발생합니다.&lt;/p>
&lt;h3 id="마스터-노드-설치-조인-전">마스터 노드 설치-조인 전&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo kubeadm init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p &lt;span class="nv">$HOME&lt;/span>/.kube
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp -i /etc/kubernetes/admin.conf &lt;span class="nv">$HOME&lt;/span>/.kube/config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo chown &lt;span class="k">$(&lt;/span>id -u&lt;span class="k">)&lt;/span>:&lt;span class="k">$(&lt;/span>id -g&lt;span class="k">)&lt;/span> &lt;span class="nv">$HOME&lt;/span>/.kube/config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kubectl taint nodes --all node-role.kubernetes.io/master-
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kubectl create -f https://raw.githubusercontent.com/cilium/cilium/v1.6/install/kubernetes/quick-install.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kubectl get pods -n kube-system --selector&lt;span class="o">=&lt;/span>k8s-app&lt;span class="o">=&lt;/span>cilium
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>쿠버네티스를 초기화합니다. 이후 출력되는 명령어를 이용하여 워커노드를 조인 시킵니다. (sudo)&lt;/p>
&lt;h3 id="마스터-노드-설치-조인-후">마스터 노드 설치-조인 후&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/master/deploy/local-path-storage.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install nfs-common
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install nfs-kernel-server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo mkdir /nfsroot
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo chown nobody:nogroup /nfsroot
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo chmod &lt;span class="m">777&lt;/span> /nfsroot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>해당 과정은 NFS Client Provisioner를쿠버네티스가 사용할 수 있게 구축하고&lt;br>
사용할 NFS Server도 마스터 노드에 올리는 과정을 설명하고 있습니다.&lt;/p>
&lt;p>sudo nano /etc/exports 로 아래 내용 추가&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">/nfsroot 192.168.80.110&lt;span class="o">(&lt;/span>rw,insecure,sync,no_root_squash,no_subtree_check&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/nfsroot 192.168.80.111&lt;span class="o">(&lt;/span>rw,insecure,sync,no_root_squash,no_subtree_check&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>해당 과정을 통하여, 존재하는 모든 노드에 NFS 공간을 할당하고 있습니다.&lt;br>
쿠버플로우에서 NFS는 의무가 아니지만 없을경우 가변적으로, 쿠버플로우가 볼륨을 잡기 때문에&lt;br>
비추천 하고 있습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo service nfs-kernel-server restart
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl &lt;span class="nb">enable&lt;/span> rpcbind
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl &lt;span class="nb">enable&lt;/span> nfs-server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl start rpcbind
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl start nfs-server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo exportfs -a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl https://raw.githubusercontent.com/helm/helm/release-2.16/scripts/get &amp;gt; get_helm.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod &lt;span class="m">700&lt;/span> get_helm.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./get_helm.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">helm repo add raphael https://raphaelmonrouzeau.github.io/charts/repository/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">helm repo update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">helm install nfs-provisioner &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--set nfs.server&lt;span class="o">=&lt;/span>192.168.80.110 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--set nfs.path&lt;span class="o">=&lt;/span>/nfsroot &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--set storageClass.defaultClass&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--set storageClass.name&lt;span class="o">=&lt;/span>nfs-provisioner &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>raphael/nfs-server-provisioner
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kubectl apply -f https://raw.githubusercontent.com/mojokb/handson-kubeflow/master/registry/kubeflow-registry-deploy.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kubectl apply -f https://raw.githubusercontent.com/mojokb/handson-kubeflow/master/registry/kubeflow-registry-svc.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>아이피 주소 192.168.80.110, 192.168.80.111은 각각 마스터, 워커의 주소입니다.&lt;/strong> 환경에 맞춰서 사용해 주셔야 합니다.&lt;br>
쿠버플로우의 경우 nfs를 사용하지 않을 시 가변용량 저장소를 이용하기 때문에 사양문제가 발생한다고 합니다.&lt;/p>
&lt;h3 id="마스터-워커-공통-설치-진행">마스터, 워커 공통 설치 진행&lt;/h3>
&lt;p>&lt;em>/etc/docker/daemon.json&lt;/em>에 추가&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;insecure-registries&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;kubeflow-registry.default.svc.cluster.local:30000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>그리고 재시작합니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo systemctl restart docker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;em>/etc/hosts&lt;/em>에 추가(이 부분은 미리 추가해도 됨)&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">192.168.80.110 kubeflow-registry.default.svc.cluster.local
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="워커노드에서-nfs-확인">워커노드에서 nfs 확인&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">curl kubeflow-registry.default.svc.cluster.local:30000/v2/_catalog
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="마스터-노드에서의-쿠버플로우-설치">마스터 노드에서의 쿠버플로우 설치&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget https://github.com/kubernetes-sigs/kustomize/releases/download/v3.2.0/kustomize_3.2.0_linux_amd64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mv kustomize_3.2.0_linux_amd64 kustomize
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod &lt;span class="m">777&lt;/span> kustomize
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo mv kustomize /usr/local/bin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone https://github.com/kubeflow/manifests.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> manifests
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> ! kustomize build example &lt;span class="p">|&lt;/span> kubectl apply -f -&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Retrying to apply resources&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> sleep 10&lt;span class="p">;&lt;/span> &lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>후에&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl port-forward svc/istio-ingressgateway -n istio-system 8080:80
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>로 &lt;a class="link" href="mailto:user@example.com" >user@example.com&lt;/a>/12341234을 사용하여 로컬상의 테스트가 가능합니다.&lt;br>
또는&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl port-forward --address 0.0.0.0 svc/istio-ingressgateway -n istio-system 8080:80
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>로 외부노출을 허용시킬 수 있습니다.&lt;/p>
&lt;h2 id="참고-자료들">참고 자료들&lt;/h2>
&lt;p>만약에 정상작동하지 않을 경우 아래의 자료를 확인해주세요.&lt;/p>
&lt;h3 id="설치법">설치법&lt;/h3>
&lt;p>&lt;a class="link" href="https://github.com/kubeflow/manifests" target="_blank" rel="noopener"
>https://github.com/kubeflow/manifests&lt;/a>&lt;br>
&lt;a class="link" href="https://learning-sarah.tistory.com/entry/Kubeflow-13-%EC%84%A4%EC%B9%98" target="_blank" rel="noopener"
>https://learning-sarah.tistory.com/entry/Kubeflow-13-%EC%84%A4%EC%B9%98&lt;/a>&lt;br>
&lt;a class="link" href="https://jwher.github.io/posts/install-kubeflow/" target="_blank" rel="noopener"
>https://jwher.github.io/posts/install-kubeflow/&lt;/a>&lt;br>
&lt;a class="link" href="https://lsjsj92.tistory.com/580" target="_blank" rel="noopener"
>https://lsjsj92.tistory.com/580&lt;/a>&lt;br>
&lt;a class="link" href="https://yooloo.tistory.com/229" target="_blank" rel="noopener"
>https://yooloo.tistory.com/229&lt;/a>&lt;br>
&lt;a class="link" href="https://velog.io/@ehddnr/kubernetes-kubeflow-%EC%84%A4%EC%B9%98-feat.-GCP" target="_blank" rel="noopener"
>https://velog.io/@ehddnr/kubernetes-kubeflow-%EC%84%A4%EC%B9%98-feat.-GCP&lt;/a>&lt;br>
&lt;a class="link" href="https://losskatsu.github.io/it-infra/mlops01/#" target="_blank" rel="noopener"
>https://losskatsu.github.io/it-infra/mlops01/#&lt;/a>&lt;br>
&lt;a class="link" href="https://velog.io/@csk6124/Kubeflow-1.4-%EC%84%A4%EC%B9%98" target="_blank" rel="noopener"
>https://velog.io/@csk6124/Kubeflow-1.4-%EC%84%A4%EC%B9%98&lt;/a>&lt;br>
&lt;a class="link" href="https://velog.io/@dev_halo/%EC%95%84%EB%AC%B4%EB%8F%84-%EC%95%88%EC%95%8C%EB%A0%A4%EC%A3%BC%EB%8A%94-on-premise-Kubeflow-%EA%B5%AC%EC%B6%95%ED%95%B4%EB%B3%B4%EC%9E%90" target="_blank" rel="noopener"
>https://velog.io/@dev_halo/%EC%95%84%EB%AC%B4%EB%8F%84-%EC%95%88%EC%95%8C%EB%A0%A4%EC%A3%BC%EB%8A%94-on-premise-Kubeflow-%EA%B5%AC%EC%B6%95%ED%95%B4%EB%B3%B4%EC%9E%90&lt;/a>&lt;/p>
&lt;h3 id="트러블-슈팅">트러블 슈팅&lt;/h3>
&lt;p>&lt;a class="link" href="https://hackmd.io/@maelvls/debug-cert-manager-webhook" target="_blank" rel="noopener"
>https://hackmd.io/@maelvls/debug-cert-manager-webhook&lt;/a>&lt;br>
&lt;a class="link" href="https://github.com/calebhailey/homelab/issues/3#issuecomment-569543391" target="_blank" rel="noopener"
>https://github.com/calebhailey/homelab/issues/3#issuecomment-569543391&lt;/a>&lt;br>
&lt;a class="link" href="https://github.com/kubeflow/manifests/issues/2086" target="_blank" rel="noopener"
>https://github.com/kubeflow/manifests/issues/2086&lt;/a>&lt;br>
&lt;a class="link" href="https://mlops-for-all.github.io/docs/setup-components/install-components-kf/" target="_blank" rel="noopener"
>https://mlops-for-all.github.io/docs/setup-components/install-components-kf/&lt;/a>&lt;/p></description></item><item><title>리눅스 DHCP, DDNS</title><link>https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/</link><pubDate>Tue, 28 Jun 2022 21:55:53 +0900</pubDate><guid>https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/</guid><description>&lt;img src="https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/thum.png" alt="Featured image of post 리눅스 DHCP, DDNS" />&lt;h2 id="서론">서론&lt;/h2>
&lt;h3 id="개요">개요&lt;/h3>
&lt;p>DHCP를 리눅스에서 구성하는 것은 어렵지 않습니다. 두개 정도되는 설정파일을 수정하는 것 만으로 구성할 수 있습니다.&lt;br>
문제는 DNS입니다. 만약 클라이언트 측의 IP Address가 동적으로 변한다면 DNS도 이에 따라 변해야 할 것입니다.&lt;/p>
&lt;p>이렇게 정보가 바뀔 때 마다 DNS에 자동으로 갱신 시킬 수 있는 서비스를 DynamicDNS라고 부릅니다.&lt;/p>
&lt;p>이번 작업을 하기전에 앞의 작업이 정말 이상이 없었는지 확인해 보시는걸 추천드립니다.&lt;br>
당연히 이런건 말을 하지 않아도 앞으로 해주는 것이 좋습니다. 또한 이 과정에 없더라도 어떤 단순 명령이 동작하지 않으면&lt;br>
앞의 과정을 기반으로 충분히 해내실 수 있어 적지 않은 것이니 찾아보시길 권장드립니다.&lt;br>
&lt;em>(ex&amp;gt;Server02에서 ping client01.busan.com이 안되는데?)&lt;/em>&lt;/p>
&lt;h3 id="토폴로지">토폴로지&lt;/h3>
&lt;p>&lt;img src="https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/1.png"
width="1011"
height="581"
srcset="https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/1_hu8c7bf1d132aa4ed6d9b8e180d4367e6d_108924_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/1_hu8c7bf1d132aa4ed6d9b8e180d4367e6d_108924_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="토폴로지"
class="gallery-image"
data-flex-grow="174"
data-flex-basis="417px"
>&lt;/p>
&lt;h2 id="준비작업">준비작업&lt;/h2>
&lt;h3 id="클라이언트-추가">클라이언트 추가&lt;/h3>
&lt;p>먼저 클라이언트를 하나 더 추가해 놓겠습니다. 기존에 있는 클라이언트를 clone 하셔서 만들어 주시면 됩니다.&lt;br>
단 hostname 기준으로 만들어 놓을 것이기 때문에 두 클라이언트의 hostname은 달라야 합니다.&lt;/p>
&lt;p>hostname은 /etc/hostname 수정 후 재부팅으로 변경할 수 있습니다.&lt;/p>
&lt;p>&lt;img src="https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/2.png"
width="1928"
height="1056"
srcset="https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/2_hu95c0742cd7de8120c1679894fc722630_70461_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/2_hu95c0742cd7de8120c1679894fc722630_70461_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="호스트 네임"
class="gallery-image"
data-flex-grow="182"
data-flex-basis="438px"
>&lt;/p>
&lt;h3 id="bind9-정적-정보-삭제">BIND9 정적 정보 삭제&lt;/h3>
&lt;p>이번 구현을 완료하면 [hostname].busan.com 과 같이 호스트네임과 변경되는 IP Address에 따라 자동으로 정보가 생성될 것입니다.&lt;br>
따라서 앞에서 만들어 놓은 client01 부분은 모두 삭제하겠습니다.&lt;/p>
&lt;p>&lt;img src="https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/3.png"
width="1928"
height="1056"
srcset="https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/3_hua134613ac4eb7c4ce46f5a558d4fd801_44069_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/3_hua134613ac4eb7c4ce46f5a558d4fd801_44069_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="BIND9 앞 과정 삭제"
class="gallery-image"
data-flex-grow="182"
data-flex-basis="438px"
>&lt;/p>
&lt;h3 id="필요-패키지-설치">필요 패키지 설치&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt-get update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt-get install isc-dhcp-server bind9-utils
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>먼저 앞으로 필요한 데몬을 설치하겠습니다. 해당 데몬들은 이름에서 유추할 수 있는 기능 그대로를 제공합니다.&lt;/p>
&lt;h2 id="bind9-설정">BIND9 설정&lt;/h2>
&lt;h3 id="개요-1">개요&lt;/h3>
&lt;p>BIND9는 DHCP보다 설정할 것이 적습니다.
해당 과정은 앞으로의 BIND9 설정에도 유용하게 쓰일 개념들이 많으니 참고해서 진행하시면 좋겠습니다.&lt;/p>
&lt;h3 id="설명">설명&lt;/h3>
&lt;p>이 곳을 수정합니다. 도메인의 상세 설정을 하는 곳입니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">nano /etc/bind/named.conf.local
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>아래 내용을 추가합니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">include &lt;span class="s2">&amp;#34;/etc/bind/rndc.key&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">controls &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> inet 192.168.10.3 allow &lt;span class="o">{&lt;/span> 192.168.10.3&lt;span class="p">;&lt;/span> &lt;span class="o">}&lt;/span> keys &lt;span class="o">{&lt;/span> rndc-key&lt;span class="p">;&lt;/span> &lt;span class="o">}&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>rndc.key&lt;/strong>라는 단어가 나왔습니다. 해당 암호화키는 DHCP와 BIND9가 서로 약속된 사이가 맞다는 것을 증명합니다.&lt;br>
만약 없거나, 새로운 rndc.key를 발급하고 싶다면 &lt;em>rndc-confgen&lt;/em>를 사용하여 생성할 수 있습니다.&lt;/p>
&lt;p>이번에는 BIND9를 설치하면서 자동으로 생긴 키를 사용하겠습니다.&lt;br>
다음으로 해당 IP Address의 서비스를 해당 IP Address가 수정하는 것을 허락하겠다는 내용입니다.&lt;br>
즉 동일한 곳에 설치된 DHCP 서비스가 BIND9와 상호작용 할 수 있다는 것을 서술합니다.&lt;/p>
&lt;p>다음으로 앞에서 정의해 둔 도메인 정방향, 역방향 영역에 allow-update { key rndc-key; }; 를 추가합니다.&lt;br>
해당 키를 이용한 갱신을 허락하겠다는 내용입니다. 마쳤으면 아래와 같이 나타납니다.&lt;/p>
&lt;p>&lt;img src="https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/4.png"
width="1928"
height="1056"
srcset="https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/4_hu1204d79c0bb95acd48260a3ec4774ccf_49922_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/4_hu1204d79c0bb95acd48260a3ec4774ccf_49922_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="BIND9 local"
class="gallery-image"
data-flex-grow="182"
data-flex-basis="438px"
>&lt;/p>
&lt;p>확인이 완료되었으면 BIND9를 재시작 합니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">service bind9 restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="dhcp">DHCP&lt;/h2>
&lt;h3 id="개요-2">개요&lt;/h3>
&lt;p>DHCP는 서브넷팅 관련 지식이 있다면 추가적으로 설명할 내용은 없습니다.&lt;br>
이번 포스팅에서는 갱신 시간과 같은 상세 설명은 넘어가도록 하겠습니다.&lt;/p>
&lt;h3 id="설명-1">설명&lt;/h3>
&lt;p>먼저 전파점 인터페이스를 설정합니다. 인터페이스 이름이 기억이 안난다면 ifconfig으로 확인할 수 있습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nano /etc/default/isc-dhcp-server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/5.png"
width="1928"
height="1056"
srcset="https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/5_hufcbe288f402ca289f201183a58d28751_53714_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/5_hufcbe288f402ca289f201183a58d28751_53714_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="DHCP Interface"
class="gallery-image"
data-flex-grow="182"
data-flex-basis="438px"
>&lt;/p>
&lt;p>다음은 본격적인 설정입니다. 길게 수정할 예정이기 때문에 원본 설정파일을 백업하고 파일을 그림처럼 작성합니다.&lt;br>
주석을 풀면서 만드셔도 되고, 다 지운 뒤 새로 작성해도 상관 없습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /etc/dhcp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp dhcpd.conf dhcpd.conf.back
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nano dhcpd.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/6.png"
width="1928"
height="1056"
srcset="https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/6_hue87e05bfbaeb953c01c5ca1d7e399c5e_54469_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/6_hue87e05bfbaeb953c01c5ca1d7e399c5e_54469_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="DHCPD"
class="gallery-image"
data-flex-grow="182"
data-flex-basis="438px"
>&lt;/p>
&lt;p>중요한것만 집고 넘어가면&lt;br>
&lt;strong>option&lt;/strong>이 붙은 내용들은 DHCP서비스를 받는 호스트에게 해당 정보가 뿌려진다는 것을 뜻합니다.
그리고 &lt;strong>subnet 영역&lt;/strong>이 우리가 기본적으로 알고있던 DHCP의 기능, 동적 주소 범위를 나타내는 것이며&lt;br>
원한다면 이곳에 특정 MAC Address에는 고정주소가 발급되도록 만들 수 있습니다.&lt;/p>
&lt;p>작성이 완료되었다면 dhcpd -t를 통해 문법 검사를 실시할 수 있습니다. 문제 없다면 재시작 하면 완료입니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">dhcpd -t
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">service isc-dhcp-server restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="마치며">마치며&lt;/h2>
&lt;h3 id="검사">검사&lt;/h3>
&lt;p>먼저 각 클라이언트를 내부망에도 불구하고 static을 해제합니다.&lt;/p>
&lt;p>&lt;img src="https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/7.png"
width="1928"
height="1056"
srcset="https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/7_hu8a2f1777d6a0e336a588782b05dc25f8_130844_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/7_hu8a2f1777d6a0e336a588782b05dc25f8_130844_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="networks"
class="gallery-image"
data-flex-grow="182"
data-flex-basis="438px"
>&lt;/p>
&lt;p>재부팅 하면 제대로 동적할당 되고있음을 확인할 수 있습니다. 또한 nslookup으로 클라이언트의 아이피주소를 입력하면&lt;br>
알아서 클라이언트의 호스트 이름으로 자식 도메인네임을 만든 것을 확인할 수 있습니다.&lt;/p>
&lt;p>&lt;img src="https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/8.png"
width="1928"
height="1056"
srcset="https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/8_hu9497e543adb7c065f03b4f304cb932c7_146447_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/%EB%A6%AC%EB%88%85%EC%8A%A4-dhcp-ddns/8_hu9497e543adb7c065f03b4f304cb932c7_146447_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="확인"
class="gallery-image"
data-flex-grow="182"
data-flex-basis="438px"
>&lt;/p>
&lt;h3 id="추가-개념">추가 개념&lt;/h3>
&lt;p>이번 작업을 해보시면서 이해가 잘 되셨다면 의문점이 들 수 있습니다.&lt;br>
DHCP도 서버의 일종입니다. 당연히 그럼 통신이 이루어져야 하고 이것은 같은 범위의 네트워크여야 가능합니다.&lt;/p>
&lt;p>그렇다면 다른 범위에서 DHCP를 얻어오는것이 어떻게 이루어지는지 궁금할 수 있습니다. 이것을 가능하게 하는 기능을&lt;br>
&lt;strong>DHCP Relay&lt;/strong> 라고 합니다.&lt;/p>
&lt;p>이런 의문도 있습니다. 우리는 BIND9를 통해 DNS를 구성했습니다.&lt;br>
실제 인터넷 모든 전역의 도메인 네임은 굉장히 많습니다. 이것을 전부 한 곳에 몰아서 기록 시킨 것인지 궁금합니다.&lt;br>
실은 그렇지 않습니다. DNS 자체가 굉장히 많으며 DNS 끼리 정보를 교환합니다. 이것을 &lt;strong>DNS Fowarding&lt;/strong> 이라고 합니다.&lt;/p>
&lt;p>이 두가지 기능에 대해선 다음 포스팅에서 만나보도록 하겠습니다.&lt;/p></description></item><item><title>DNS Server, BIND9</title><link>https://docs.9bon.org/p/dns-server-bind9/</link><pubDate>Tue, 12 Apr 2022 20:49:09 +0900</pubDate><guid>https://docs.9bon.org/p/dns-server-bind9/</guid><description>&lt;img src="https://docs.9bon.org/p/dns-server-bind9/thum.png" alt="Featured image of post DNS Server, BIND9" />&lt;h2 id="서론">서론&lt;/h2>
&lt;p>앞에서 IP Address로 신호를 보내봤지만, Domain name형식이 아닌 주소를 쓰는 경우는 매우 보기 어렵습니다.&lt;br>
대부분의 학생분들은 DNS라는 단어를 들어보셨을 거라 생각합니다.&lt;br>
IP Address와 Domain name간의 맵핑을 이루게 해주는 서비스, 내지 서버입니다.&lt;/p>
&lt;p>실은 여기 Domain이란 단어는 우리가 알고있는 문자 형식의 주소를 뜻하는 말보다 더 여러가지의 내용이 포괄된 단어입니다.&lt;br>
이 내용과 관련해서는 다음에 다루어보도록 하겠습니다.&lt;/p>
&lt;h2 id="bind9">Bind9&lt;/h2>
&lt;h3 id="설명">설명&lt;/h3>
&lt;p>우리의 목표는 아래의 토폴로지입니다. 이 블로그 페이지는 Server2에 있는,&lt;br>
DNS를 만들어주는 Bind9의 설정법을 다루어 볼 것입니다. 그 밖의 설정들은 되어있다고 가정하겠습니다.&lt;/p>
&lt;p>&lt;img src="https://docs.9bon.org/p/dns-server-bind9/1.png"
width="850"
height="465"
srcset="https://docs.9bon.org/p/dns-server-bind9/1_hu5282afc79d8de0158f3ec4bb28bdba9d_83590_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/dns-server-bind9/1_hu5282afc79d8de0158f3ec4bb28bdba9d_83590_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="토폴로지"
class="gallery-image"
data-flex-grow="182"
data-flex-basis="438px"
>&lt;/p>
&lt;p>DNS은 Domain name을 IP Address로 변환해주는 정방향, 그 반대인 역방향이라는 개념과 주, 보조영역의 개념이 존재합니다.&lt;br>
오늘은 주 영역으로 정, 역방향을 구성해보도록 하겠습니다.&lt;/p>
&lt;h3 id="구현">구현&lt;/h3>
&lt;p>설치하고 zone 설정을 시행합니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">apt-get install bind9
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /etc/bind9
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nano named.conf.local
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>아래처럼 작성해 보겠습니다. 위에는 정방향, 아래는 역방향입니다.&lt;/p>
&lt;p>&lt;img src="https://docs.9bon.org/p/dns-server-bind9/2.png"
width="904"
height="318"
srcset="https://docs.9bon.org/p/dns-server-bind9/2_huefd410dedda1b1270c311ad5204d7923_7374_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/dns-server-bind9/2_huefd410dedda1b1270c311ad5204d7923_7374_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="zone 설정"
class="gallery-image"
data-flex-grow="284"
data-flex-basis="682px"
>&lt;/p>
&lt;p>이제 정의해준 파일을 만들어 주어야 합니다. 포함된 예제가 있으니 그것을 복사해서 사용하겠습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">cp db.empty /var/cache/bind/busan.com.zone
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nano /var/cache/bind/busan.com.zone
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://docs.9bon.org/p/dns-server-bind9/3.png"
width="891"
height="309"
srcset="https://docs.9bon.org/p/dns-server-bind9/3_hu724f506c7055d8f3475104a392f245ae_7560_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/dns-server-bind9/3_hu724f506c7055d8f3475104a392f245ae_7560_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="정방향 설정"
class="gallery-image"
data-flex-grow="288"
data-flex-basis="692px"
>&lt;/p>
&lt;p>SOA로 시작하는 내용은 DNS의 갱신, 캐시, 재요청등의 설정들을 뜻하며&lt;br>
그 이후부터는 맨 왼쪽의 문자로 접근했을 때 내보낼 결과를 뜻합니다. 단 @는 &lt;a class="link" href="http://busan.com" target="_blank" rel="noopener"
>busan.com&lt;/a> 자체가 요청 됐을때의 경우입니다.&lt;br>
이제 역방향 파일을 만들어주겠습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">cp /var/cache/bind/busan.com.zone /var/cache/bind/busan.com.zone.rev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nano /var/cache/bind/busan.com.zone.rev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://docs.9bon.org/p/dns-server-bind9/4.png"
width="897"
height="319"
srcset="https://docs.9bon.org/p/dns-server-bind9/4_hu82d5f1eb6de024d8ed5a83502982dc39_7615_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/dns-server-bind9/4_hu82d5f1eb6de024d8ed5a83502982dc39_7615_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="역방향 설정"
class="gallery-image"
data-flex-grow="281"
data-flex-basis="674px"
>&lt;/p>
&lt;p>IN 이 PTR로 바뀌었다는 것 말고는 뜻이 동일합니다.&lt;/p>
&lt;p>마무리 하셨다면&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">named-checkconf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>로 신택스 테스트를 할 수 있습니다. 아무 출력도 없으면 통과 된 것입니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">service bind9 restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>로 bind9설정을 적용시킬 수 있습니다.&lt;/p>
&lt;h3 id="외부-설정">외부 설정&lt;/h3>
&lt;p>이제 Server01,02 그리고 Client01 각각 DNS 위치가 Server02라는 것을 설정해야합니다.&lt;br>
이 또한 나중에 인터넷 연결이 필요할 때 다시 원상태로 복구해야하는 점을 고려하여 원래 있던 내용을 &lt;strong>주석처리&lt;/strong> 하시길 바랍니다.&lt;/p>
&lt;p>윈도우는 쉬우니 넘어가고 Debian만 살펴보겠습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">nano /etc/resolv.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://docs.9bon.org/p/dns-server-bind9/5.png"
width="858"
height="168"
srcset="https://docs.9bon.org/p/dns-server-bind9/5_hu766f6b050319b24f848360373f71d742_3129_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/dns-server-bind9/5_hu766f6b050319b24f848360373f71d742_3129_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="resolv 설정"
class="gallery-image"
data-flex-grow="510"
data-flex-basis="1225px"
>&lt;/p>
&lt;p>이렇게 설정하시면 완료됩니다. 참고로 리눅스에서는 DNS주소 설정이 resolv뿐만 있는것이 아닙니다.&lt;/p>
&lt;h2 id="테스트">테스트&lt;/h2>
&lt;p>먼저 Server01로 가보겠습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-Bash" data-lang="Bash">&lt;span class="line">&lt;span class="cl">nslookup client01.busan.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nslookup www.busan.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nslookup 192.168.10.10
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://docs.9bon.org/p/dns-server-bind9/6.png"
width="779"
height="299"
srcset="https://docs.9bon.org/p/dns-server-bind9/6_hu61e610084107e6ce25ae7d21fc8b754f_8252_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/dns-server-bind9/6_hu61e610084107e6ce25ae7d21fc8b754f_8252_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="nslookup"
class="gallery-image"
data-flex-grow="260"
data-flex-basis="625px"
>&lt;/p>
&lt;p>정상적으로 나오는 모습을 확인할 수 있습니다.&lt;br>
client01의 브라우저로 &lt;a class="link" href="http://www.busan.com" target="_blank" rel="noopener"
>www.busan.com&lt;/a> 에 접속해 보겠습니다.&lt;/p>
&lt;p>&lt;img src="https://docs.9bon.org/p/dns-server-bind9/7.png"
width="1908"
height="650"
srcset="https://docs.9bon.org/p/dns-server-bind9/7_hu4d7479727f0177b5b603e7d150cc4546_26954_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/dns-server-bind9/7_hu4d7479727f0177b5b603e7d150cc4546_26954_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="브라우저"
class="gallery-image"
data-flex-grow="293"
data-flex-basis="704px"
>&lt;/p>
&lt;p>역시 잘 되는 모습을 확인할 수 있습니다.&lt;/p></description></item><item><title>VMWare 서버 공부환경 만들기</title><link>https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link><pubDate>Fri, 01 Apr 2022 08:30:11 +0900</pubDate><guid>https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid><description>&lt;img src="https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/thum.png" alt="Featured image of post VMWare 서버 공부환경 만들기" />&lt;h2 id="서론">서론&lt;/h2>
&lt;p>GuestOS에서 무언가를 설치하기 위해 인터넷과 연결하여 사용할 때가 있을 것이며&lt;br>
인터넷이 아닌 공부 목적의, 내부 네트워크의 환경을 사용하는 일도 있을 것입니다. 이 두가지를 쉽게 오가면서 사용할 수 있도록&lt;br>
미리 준비 해놓으면 굉장히 편리합니다.&lt;/p>
&lt;p>우리의 목표는 아래의 토폴로지와 같은 매우 간단한 형태의 네트워크망입니다.&lt;/p>
&lt;p>&lt;img src="https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/01.png"
width="829"
height="514"
srcset="https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/01_hu078c8a65e899595cbaffd1547d116d51_67192_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/01_hu078c8a65e899595cbaffd1547d116d51_67192_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="간단한 토폴로지"
class="gallery-image"
data-flex-grow="161"
data-flex-basis="387px"
>&lt;/p>
&lt;h2 id="vmnet">VMNet&lt;/h2>
&lt;h3 id="설명">설명&lt;/h3>
&lt;p>VMNet은 VMWare Workstation에서 지원하는 가상 인터페이스, 네트워크입니다. 이것을 통하여 내부 네트워크망을 구현할 수 있습니다.&lt;br>
네트워크 환경은 Subneting, Gateway 그리고 구축하지 않아도 제공되는 DHCP 서비스등을 설정할 수 있으며
인터페이스는 위의 네트워크 환경이 아니더라도 NAT, Bridge 등을 지원합니다.&lt;/p>
&lt;p>이번 시간에 필요한 환경은 하나의 내부 네트워크가 필요합니다. VMNet은 하나를 추가로 만들 것입니다.&lt;/p>
&lt;h3 id="virtual-network-editor-설정">Virtual Network Editor 설정&lt;/h3>
&lt;p>Edit→Virtual Network Editor 으로 들어갑니다. 그 후에 아래의 Change Settings까지 눌러주셔야 합니다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>적용된 설정&lt;/th>
&lt;th>설명&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Host-only&lt;/td>
&lt;td>브릿지, 나트가 아닌 외부와 단절된, VM 내부에서만 동작하게 되는 망입니다.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Connect a host vitual adapter~&lt;/td>
&lt;td>체크를 하게되면 HostOS 설정(ex 윈도우 제어판)에도 해당 어뎁터가 감지됩니다.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Use local DHCP~&lt;/td>
&lt;td>VMWare에서 지원하는 DHCP를 적용시킬 수 있습니다.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>우리는 Add Network로 Vmnet10 을 추가하면 됩니다. 설정하면 다음과 같습니다.
&lt;img src="https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/02.png"
width="603"
height="529"
srcset="https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/02_hu3aaf4cd514939851847ff6017d4bb4a6_27810_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/02_hu3aaf4cd514939851847ff6017d4bb4a6_27810_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="완료된 모습"
class="gallery-image"
data-flex-grow="113"
data-flex-basis="273px"
>&lt;/p>
&lt;h2 id="linuxdebian계열">Linux(Debian계열)&lt;/h2>
&lt;h3 id="설명-1">설명&lt;/h3>
&lt;p>인터넷망과 내부망의 연결을 오갈수 있다고 끝난 이야기가 아닙니다. 그때 마다 올바른 아이피주소를 사용해야 할 것입니다.&lt;br>
기존은 DHCP로 되어있을 것이니 Static설정을 추가하고 경우에 따라 주석처리, 주석해제를 반복하며 사용하면 편리합니다.&lt;/p>
&lt;h3 id="설정">설정&lt;/h3>
&lt;p>위쪽(1)의 버튼을 눌러 잠깐 GuestOS에서 빠져나올 수 있습니다. 그 다음(2)을 누르면 바로 인터페이스 설정에 들어갈 수 있습니다.&lt;/p>
&lt;p>&lt;img src="https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/03.png"
width="1936"
height="734"
srcset="https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/03_hu1f4a05cf610854b13ed5eebdde3f01db_139681_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/03_hu1f4a05cf610854b13ed5eebdde3f01db_139681_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="버튼 안내"
class="gallery-image"
data-flex-grow="263"
data-flex-basis="633px"
>&lt;/p>
&lt;p>이곳에서 앞에서 설정했던 VMNet을 선택해주겠습니다. 만약 GuestOS가 실제 Host였다면 인터페이스에서 나온 선이 인터넷이&lt;br>
아닌 내부망의 허브에 물린 셈입니다.&lt;/p>
&lt;p>다시 Debian으로 복귀해 본격적인 설정하기 앞서 ifconfig으로 인터페이스 이름을 확인해 보겠습니다. 당연히 명령어를 사용하실 때는 권한에 유의하셔야 합니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ifconfig
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/04.png"
width="633"
height="166"
srcset="https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/04_hua977036e3b138b5513d7081816a9dd27_8399_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/04_hua977036e3b138b5513d7081816a9dd27_8399_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="ifconfig"
class="gallery-image"
data-flex-grow="381"
data-flex-basis="915px"
>&lt;/p>
&lt;p>저같은 경우는 &lt;strong>ens33&lt;/strong>입니다. 사진처럼 외부 아이피주소가 할당된 인터페이스를 찾으면 됩니다.&lt;/p>
&lt;p>이제 이름을 기억하고 아래처럼 인터페이스 설정파일에 접근하겠습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nano /etc/network/interfaces
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>여기서 부터는 오타에 주의해야합니다. 오타가 발생하면 인터페이스 갱신이 불가능 해지며 이것은 연결이 불가능함을 뜻합니다.&lt;/p>
&lt;p>여기서는 각 인터페이스의 address, subnet, netmask, broadcast, gateway 등을 설정할 수 있습니다.&lt;/p>
&lt;p>기존의 DHCP 설정은 주석처리하고 아래와 같이 적어보겠습니다.&lt;/p>
&lt;p>&lt;img src="https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/05.png"
width="853"
height="355"
srcset="https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/05_hu4c74e0fb8f0d954402e2a66f261951a2_9922_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/05_hu4c74e0fb8f0d954402e2a66f261951a2_9922_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="interfaces"
class="gallery-image"
data-flex-grow="240"
data-flex-basis="576px"
>&lt;/p>
&lt;p>이후엔 오타를 다시 확인해보고 갱신 명령을 실행시키면 완료됩니다. 설정이 제대로 변경되었는지 확인해봅시다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">service networking reload
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ifconfig
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/06.png"
width="689"
height="381"
srcset="https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/06_hua40824f8825bd75f26e421cbe720e24d_16361_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/06_hua40824f8825bd75f26e421cbe720e24d_16361_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="interfaces"
class="gallery-image"
data-flex-grow="180"
data-flex-basis="434px"
>&lt;/p>
&lt;h2 id="windows">Windows&lt;/h2>
&lt;h3 id="설명-2">설명&lt;/h3>
&lt;p>Windows는 Linux보다 더 편리하게 설정할 수 있습니다. 먼저 위와 동일하게 해당 GuestOS의 인터페이스 VMNet은 변경해야 합니다.&lt;br>
위의 토폴로지처럼 마찬가지로, 동일한 VMNet과 연결하면 되겠습니다. 또한 윈도우에서 아이피 주소를 변경하는 방법은 자세히&lt;br>
나와있으니 쉽게 하실수 있습니다만 윈도우 방화벽 정책에 ICMP와 같은 여러 프로토콜이 막혀있기 때문에 &lt;strong>방화벽을 설정하거나 해제해야 합니다.&lt;/strong>&lt;/p>
&lt;h2 id="마무리">마무리&lt;/h2>
&lt;p>서로 ping명령어를 사용하여 연결이 제대로 되어있는지 확인할 수 있습니다.&lt;/p>
&lt;p>&lt;img src="https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/07.png"
width="530"
height="146"
srcset="https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/07_hu43046406ca2e829d90ec60d6027fb892_6838_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/vmware-%EC%84%9C%EB%B2%84-%EA%B3%B5%EB%B6%80%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0/07_hu43046406ca2e829d90ec60d6027fb892_6838_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="ping"
class="gallery-image"
data-flex-grow="363"
data-flex-basis="871px"
>&lt;/p></description></item><item><title>아파치 SSL 적용, Let's Encrypt</title><link>https://docs.9bon.org/p/%EC%95%84%ED%8C%8C%EC%B9%98-ssl-%EC%A0%81%EC%9A%A9-lets-encrypt/</link><pubDate>Fri, 01 Oct 2021 18:41:21 +0900</pubDate><guid>https://docs.9bon.org/p/%EC%95%84%ED%8C%8C%EC%B9%98-ssl-%EC%A0%81%EC%9A%A9-lets-encrypt/</guid><description>&lt;img src="https://docs.9bon.org/p/%EC%95%84%ED%8C%8C%EC%B9%98-ssl-%EC%A0%81%EC%9A%A9-lets-encrypt/thum.png" alt="Featured image of post 아파치 SSL 적용, Let's Encrypt" />&lt;h2 id="서론">서론&lt;/h2>
&lt;p>only HTTP 사용된 전달은 보호되지 않습니다. 우리가 입력할 아이디와 비밀번호는 평문으로 전달되게 될 것이며&lt;br>
이는 공격자가 쉽게 중간에서 가로챌 수 있습니다.&lt;br>
이를 방지하기 위해 지금은 TLS내지 SSL을 사용한 HTTPS가 사용되고 있습니다.&lt;br>
국내에서는 웹서버 정보제공자가 로그인과 관련된 페이지에서 HTTPS 사용을 의무한 법안이 시행중입니다.&lt;/p>
&lt;h3 id="인증서">인증서&lt;/h3>
&lt;p>페이지 제공자와 수신자는 CA(인증 기관&amp;ndash;업체)를 사이로 아래와 같은 작업을 시행합니다.&lt;/p>
&lt;h3 id="lets-encrypt">Let&amp;rsquo;s Encrypt&lt;/h3>
&lt;pre>&lt;code>https://letsencrypt.org/ko/
&lt;/code>&lt;/pre>
&lt;p>Let&amp;rsquo;s Encrypt 는 무료 CA입니다. 대신 해당 인증서는 짧은 유효기간을 가졌으며 설정의 제한이 많지만&lt;br>
&lt;strong>certbot&lt;/strong>을 통하여 쉽고 빠른 추가/갱신이 가능합니다.&lt;/p>
&lt;h2 id="certbot">certbot&lt;/h2>
&lt;p>certbot은 Let&amp;rsquo;s Encrypt에서 인증서와 키의 발급을 용이하게 도와주는 프로그램입니다. 아래처럼 설치할 수 있습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt-get install python3-certbot-apache
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>공식 사이트에는 python-certbot-apache 라고 나와 있었지만 작동되지 않습니다. 파이썬 버전에 참고해야 하는 것 같습니다.&lt;/p>
&lt;h3 id="일반-인증서-발급">일반 인증서 발급&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">certbot --apache certonly
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>입력후 도메인을 포함한&lt;/p>
&lt;h3 id="와일드카드-인증서-발급">와일드카드 인증서 발급&lt;/h3>
&lt;p>와일드카드 인증서는 하나의 부모 도메인 인증서로 자식 모두를 등록시킬 수 있는 인증서입니다.&lt;br>
하지만 자동 갱신을 시킬 방법이 없어 이점에 주의해야합니다.&lt;/p>
&lt;p>만약 &lt;code>www.a.com, mail.a.com&lt;/code> 등 *a.com을 인증시키는 것이 목표라면 다음과 같습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">certbot certonly --manual --preferred-challenges dns -d &lt;span class="s2">&amp;#34;*.a.com&amp;#34;&lt;/span> -d &lt;span class="s2">&amp;#34;a.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>하지만 위의 일반 인증서 발급과 다르게 추가 인증이 필요하다는 메세지를 볼 수 있습니다. 몇가지 제시를 해주는데&lt;br>
도메인이 본인의 것이 맞다면 도메인 인증이 가장 편리한 것 같습니다.&lt;/p>
&lt;p>저는 구글 도메인 서비스를 이용 중이기 때문에 아래의 화면에서 설정 가능합니다.&lt;/p>
&lt;p>&lt;img src="https://docs.9bon.org/p/%EC%95%84%ED%8C%8C%EC%B9%98-ssl-%EC%A0%81%EC%9A%A9-lets-encrypt/002-google.png"
width="1005"
height="376"
srcset="https://docs.9bon.org/p/%EC%95%84%ED%8C%8C%EC%B9%98-ssl-%EC%A0%81%EC%9A%A9-lets-encrypt/002-google_hu4f2bd7349f00618c3a33491322cfc093_18650_480x0_resize_box_3.png 480w, https://docs.9bon.org/p/%EC%95%84%ED%8C%8C%EC%B9%98-ssl-%EC%A0%81%EC%9A%A9-lets-encrypt/002-google_hu4f2bd7349f00618c3a33491322cfc093_18650_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="image1"
class="gallery-image"
data-flex-grow="267"
data-flex-basis="641px"
>&lt;/p>
&lt;p>타입은 텍스트로 한 후 호스트이름과 데이터에 요구조건대로 적용하면 완료됩니다.&lt;br>
단 도메인 정보가 전파되는데 시간이 걸릴 수 있으니 조금 기다렸다가 nslookup등으로 확인 한 후 다음 버튼을 누르시는걸 권장합니다.&lt;/p>
&lt;h3 id="인증서-취소">인증서 취소&lt;/h3>
&lt;p>여러가지 방법이 있지만 인증키를 모두 가지고 있다면 아래 방법이 가장 편리합니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">certbot revoke --cert-path cert.pem --key-path privkey.pem
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="cron-을-통한-자동갱신">cron 을 통한 자동갱신&lt;/h2>
&lt;p>인증서를 갱신시키는 명령어는 다음과 같습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">certbot renew --quiet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>하지만 유효기간이 가까워 지기 전마다 해당 명령어를 치는 것은 불편할 것입니다.&lt;br>
따라서 리눅스 잡 스케줄러인 cron을 사용하여 원하는 날짜가 됐을때 자동으로 해당 명령어를 사용하게 합시다.&lt;br>
아래 명령어로 스케줄러 설정 파일에 들어갈 수 있습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">crontab -e
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>크론텝은 5개의 숫자와 예약 명령어로 한 줄씩 추가 할 수 있습니다.&lt;br>
각 숫자는 순서대로 분, 시간, 일, 월, 요일(일요일=0)이며 *로 대체되면 그 부분은 상관없게 됩니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">2&lt;/span> * * /bin/bash -l -c &lt;span class="s1">&amp;#39;certbot renew --quiet&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>즉 이렇게 하면 매월 2일마다 갱신작업을 실행합니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">service cron restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>후&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">service cron status
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>로 제대로 동작중인지 확인할 수 있습니다.
만약 문제가 생겼고 해결이 안된다면&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">crontab -r
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>로 cron을 초기화 시킬수 있습니다.&lt;/p>
&lt;h2 id="아파치-설정">아파치 설정&lt;/h2>
&lt;p>마지막으로 아파치에 적용하면 작업종료입니다.&lt;/p>
&lt;h3 id="인증서-적용">인증서 적용&lt;/h3>
&lt;p>먼저 모듈을 키고 수정할 사이트를 내려줍니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">a2enmod ssl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">a2dissite www.a.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>이제 사이트 설정 콘피그에 들어가 기본 HTTP포트 80으로 호스팅 되어있는 부분을 삭제하고 SSL포트 443번으로 수정시킨 후 아래 처럼 만들어줍니다. &lt;strong>경로에 주의해야 합니다.&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ApacheConf" data-lang="ApacheConf">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;VirtualHost&lt;/span> &lt;span class="s">*:443&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">ServerName&lt;/span> www.a.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">DocumentRoot&lt;/span> &lt;span class="sx">/var/www/www.a.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">SSLEngine&lt;/span> &lt;span class="k">on&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">SSLCertificateKeyFile&lt;/span> &lt;span class="sx">/etc/letsencrypt/live/www.a.com/privkey.pem&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">SSLCertificateFile&lt;/span> &lt;span class="sx">/etc/letsencrypt/live/www.a.com/cert.pem&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">SSLCACertificateFile&lt;/span> &lt;span class="sx">/etc/letsencrypt/live/www.a.com/fullchain.pem&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Directory&lt;/span> &lt;span class="s">/&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">AllowOverride&lt;/span> &lt;span class="k">All&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Options&lt;/span> &lt;span class="k">All&lt;/span> -Indexes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Require&lt;/span> &lt;span class="k">all&lt;/span> granted
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/Directory&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/VirtualHost&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>저장 후&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">a2ensite www.a.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">service apache2 restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="http-접근시-대처">HTTP 접근시 대처&lt;/h3>
&lt;p>만약 서버측에서 HTTPS로 구현 했음에도 불구하고 유저가 HTTP로 접근한다면 접속 불가하게 만드는 것 보다 자동으로 HTTPS로 재접근 되게 만드는 것이 유저 친화적일 것입니다. 이런 기능을 &lt;strong>Rewrite, Redirect&lt;/strong>라고 합니다. 모듈명은 Rewrite입니다.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Rewrite&lt;/th>
&lt;th>Redirect&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>서버 사이드&lt;/td>
&lt;td>클라이언트 사이드&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>클라이언트 모르게 설정된 경로로 바뀜, URL을 숨기는 용도로도 사용가능&lt;/td>
&lt;td>클라이언트측 브라우저가 설정된 경로로 재접근함&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">a2enmod rewrite
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">a2dissite www.a.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ApacheConf" data-lang="ApacheConf">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;VirtualHost&lt;/span> &lt;span class="s">*:443&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">ServerName&lt;/span> www.a.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">DocumentRoot&lt;/span> &lt;span class="sx">/var/www/www.a.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">SSLEngine&lt;/span> &lt;span class="k">on&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">SSLCertificateKeyFile&lt;/span> &lt;span class="sx">/etc/letsencrypt/live/www.a.com/privkey.pem&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">SSLCertificateFile&lt;/span> &lt;span class="sx">/etc/letsencrypt/live/www.a.com/cert.pem&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">SSLCACertificateFile&lt;/span> &lt;span class="sx">/etc/letsencrypt/live/www.a.com/fullchain.pem&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Directory&lt;/span> &lt;span class="s">/&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">AllowOverride&lt;/span> &lt;span class="k">All&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Options&lt;/span> &lt;span class="k">All&lt;/span> -Indexes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Require&lt;/span> &lt;span class="k">all&lt;/span> granted
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/Directory&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/VirtualHost&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;VirtualHost&lt;/span> &lt;span class="s">*:80&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">ServerName&lt;/span> www.a.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Redirect&lt;/span> / https://www.a.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/VirtualHost&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>아파치 가상호스트 설정</title><link>https://docs.9bon.org/p/%EC%95%84%ED%8C%8C%EC%B9%98-%EA%B0%80%EC%83%81%ED%98%B8%EC%8A%A4%ED%8A%B8-%EC%84%A4%EC%A0%95/</link><pubDate>Thu, 02 Sep 2021 19:32:24 +0900</pubDate><guid>https://docs.9bon.org/p/%EC%95%84%ED%8C%8C%EC%B9%98-%EA%B0%80%EC%83%81%ED%98%B8%EC%8A%A4%ED%8A%B8-%EC%84%A4%EC%A0%95/</guid><description>&lt;img src="https://docs.9bon.org/p/%EC%95%84%ED%8C%8C%EC%B9%98-%EA%B0%80%EC%83%81%ED%98%B8%EC%8A%A4%ED%8A%B8-%EC%84%A4%EC%A0%95/thum.png" alt="Featured image of post 아파치 가상호스트 설정" />&lt;h2 id="서론">서론&lt;/h2>
&lt;p>웹 서버 데몬은 한 호스트를 여러 호스트처럼 쓸 수 있는 &lt;strong>가상 호스트(VirtualHost)&lt;/strong> 를 대부분 지원하고 있습니다. 포트번호, 서브도메인, 출발지 주소등의 규칙을 적용시킵니다.
이번엔 Debian과 Apache로 서브 도메인에 따른 규칙으로 가상 호스트를 구현해 보도록 하겠습니다.
마지막엔 cloud.9bon.org와 9bon.org가 똑같은 장치에 구성되어있음에 불구하고 서로 다른 내용을 보여주는 것이 목표입니다.&lt;/p>
&lt;h2 id="아파치-준비">아파치 준비&lt;/h2>
&lt;p>아파치가 설치되어있지 않으면 패키지 관리자로 쉽게 설치 가능합니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">apt-get update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt-get install apache2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>또한 앞으로의 과정 중 재시작을 하고 싶을땐 다음과 같습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">service apache2 restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>당연히 재시작 말고도 start, stop, &lt;strong>reload&lt;/strong>, status를 사용할 수 있습니다.&lt;/p>
&lt;h2 id="아파치-설정">아파치 설정&lt;/h2>
&lt;p>데비안 10기준 Apache2에서는 설정파일이 모두 모듈화 되어있으며 추가 설정 또한 부분화하길 권장하고 있습니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> /etc/apache2/sites-available/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>아래처럼 설정파일을 &amp;lt;추가할 사이트 도메인&amp;gt;.conf 으로 생성하면 됩니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nano a.com.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-apacheConf" data-lang="apacheConf">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;VirtualHost&lt;/span> &lt;span class="s">*:80&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">ServerName&lt;/span> a.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">DocumentRoot&lt;/span> &lt;span class="sx">/var/www/a.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Directory&lt;/span> &lt;span class="s">/&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">AllowOverride&lt;/span> &lt;span class="k">All&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Options&lt;/span> &lt;span class="k">All&lt;/span> -Indexes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Require&lt;/span> &lt;span class="k">all&lt;/span> granted
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/Directory&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/VirtualHost&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>요약하면 80번 포트로 연결되는 가상 호스트이며 도메인이 a.com일때 /var/www/a.com의 내용을 보여라는 뜻입니다.
그대로 &lt;a class="link" href="https://www.a.com" target="_blank" rel="noopener"
>www.a.com&lt;/a>또한 작성하면 됩니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">nano www.a.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ApacheConf" data-lang="ApacheConf">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;VirtualHost&lt;/span> &lt;span class="s">*:80&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">ServerName&lt;/span> www.a.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">DocumentRoot&lt;/span> &lt;span class="sx">/var/www/www.a.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Directory&lt;/span> &lt;span class="s">/&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">AllowOverride&lt;/span> &lt;span class="k">All&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Options&lt;/span> &lt;span class="k">All&lt;/span> -Indexes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">Require&lt;/span> &lt;span class="k">all&lt;/span> granted
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/Directory&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/VirtualHost&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>작성을 마치면&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">a2ensite a.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">a2ensite www.a.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>잘못 입력했다면&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">a2dissite &amp;lt;설정 파일을 기반한 주소&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>할 수 있습니다.
마지막으로 reload 하면 완료입니다.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">service apache2 reload
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>참고로 아파치는 사이트 설정을 바꾸는 것에는 reload를 모듈을 추가 해제할 때는 restart 하기를 추천하고 있습니다.&lt;/p></description></item></channel></rss>